version: '2'

services:

  tensorflow_and_pytorch:
    build:
      context: .
    container_name: tensorflow_and_pytorch
    # ports:
    # Mapping ports should not be done if we do not want to expose the service to the internet
    #   - 8888:8888
    user: $NB_UID:$NB_GID
    working_dir: /home/${NB_USER}
    volumes:
      - ${NOTEBOOKS_FOLDER}:/home/${NB_USER}
      - ./notebooks:/home/${NB_USER}/repository_notebooks
      - /etc/group:/etc/group:ro
      - /etc/passwd:/etc/passwd:ro
      - /etc/shadow:/etc/shadow:ro
    command: bash -c "conda init && echo 'conda activate pytorch' >> ~/.bashrc && jupyter notebook --port=8888 --ip=0.0.0.0 --NotebookApp.base_url='tensorflow_and_pytorch'"
    environment:
      - JUPYTER_CONFIG_DIR=/home/${NB_USER}
    labels:
      - log.level=debug
      - traefik.enable=true
      - traefik.frontend.rule=Host:${HOSTNAME};PathPrefix:/tensorflow_and_pytorch/
    depends_on:
      - traefik

  tensorboard:
    build:
      context: .
      #dockerfile: small_file_for_testing
    container_name: tensorboard
    user: $NB_UID:$NB_GID
    working_dir: /home/${NB_USER}
    volumes:
      - ${NOTEBOOKS_FOLDER}:/home/${NB_USER}
      - /etc/group:/etc/group:ro
      - /etc/passwd:/etc/passwd:ro
      - /etc/shadow:/etc/shadow:ro
    #ports:
    # Mapping ports should not be done if we do not want to expose the service to the internet
    #  - 6006:8888
    command: tensorboard --logdir=runs --port=8888 --bind_all --path_prefix=/tensorboard/
    ipc: host
    labels:
      - log.level=debug
      - traefik.enable=true
      - traefik.frontend.rule=Host:${HOSTNAME};PathPrefix:/tensorboard/
    depends_on:
      - tensorflow_and_pytorch
      - traefik

  traefik:
    image: library/traefik:1.7.18
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    command: -d --web --web.address=:8080
    volumes:
      - ./traefik/traefik.toml:/etc/traefik/traefik.toml:ro
      - /var/run/docker.sock:/var/run/docker.sock